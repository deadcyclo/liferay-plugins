<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This file is part of Liferay Social Office. Liferay Social Office is free
 * software: you can redistribute it and/or modify it under the terms of the GNU
 * Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * Liferay Social Office is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Liferay Social Office. If not, see http://www.gnu.org/licenses/agpl-3.0.html.
 */
--%>

<%
	PortletURL membersURL = PortletURLFactoryUtil.create(request, "socialactivitymessageportlet_WAR_socialactivitymessageportlet", themeDisplay.getPlid(), PortletRequest.RESOURCE_PHASE);
	membersURL.setParameter("p_p_resource_id", "members");
	membersURL.setParameter("siteid", String.valueOf(activitySet.getGroupId()));
%>

<div class="comments-container">
	<div class="comments-list"></div>

	<%	if(isOwner(themeDisplay.getUser(), activitySet.getGroupId(), themeDisplay.getCompanyId()) || PortalUtil.isOmniadmin(themeDisplay.getUserId())) {%>
	<portlet:actionURL name="updateComment" var="updateCommentURL" />
	<aui:form action="<%= updateCommentURL %>" method="post" name='<%= "fm" + activitySet.getActivitySetId() %>'>
		<aui:input name="mvcPath" type="hidden" value="/activities/view.jsp" />
		<aui:input name="redirect" type="hidden" value="<%= HtmlUtil.escape(currentURL) %>" />
		<aui:input name="<%= Constants.CMD %>" type="hidden" value="<%= Constants.ADD %>" />
		<aui:input name="className" type="hidden" value="<%= className %>" />
		<aui:input name="classPK" type="hidden" value="<%= classPK %>" />
		<aui:input name="mbMessageIdOrMicroblogsEntryId" type="hidden" value="" />

		<div>
			<div class="span10">
				<div class="user-portrait">
				<span class="avatar">
					<a href="https://hioa.no/tilsatt/<%=user.getScreenName()%>">
						<img alt="<%= HtmlUtil.escape(user.getFullName()) %>" src="<%=user.getPortraitURL(themeDisplay)%>" />
					</a>
				</span>
				</div>
				<aui:input type="textarea" cssClass="comment-form" label="" name="body" placeholder='<%= LanguageUtil.get(pageContext, "leave-a-comment") %>'/>
				<aui:input type="text" cssClass="hide comment-alerts" label="" name="alerts" placeholder='<%= LanguageUtil.get(pageContext, "alerts-placeholder") %>'/>
			</div>
			<div class="span2">
				<aui:input type="submit" cssClass="btn btn-primary" name="post" value='<%= LanguageUtil.get(pageContext, "post") %>'/>
			</div>

			<aui:input name="submit" type="hidden" value="post" />
		</div>
	</aui:form>
	<%}%>
</div>

<%	if(isOwner(themeDisplay.getUser(), activitySet.getGroupId(), themeDisplay.getCompanyId())) {%>
<aui:script use="aui-base">
	var form = A.one('#<portlet:namespace />fm<%= activitySet.getActivitySetId() %>');
	A.io.request('<%=membersURL%>', {
	dataType: 'json',
	cache: true,
	autoLoad: true,
	on: {
	success: function () {
	var members = this.get('responseData');
	members.menuItemTemplate = function (item) {
	return '<div class="user-portrait">' +
	'<span class="avatar">' +
	'<img alt="'+item.original.key+'" src="'+item.original.portrait + '">' +
	'</span>' +
	'</div>' +
	item.string.split('#')[0] +
	'<div class="job-title">'+item.original.title+'</div>';
	};
	members.lookup = function(person) {
	return person.key + '#' + person.value;
	};
	var tribute = new Tribute(members);
	tribute.attach(form.one('#<portlet:namespace/>body').getDOMNode());
	tribute.attach(form.one('#<portlet:namespace/>alerts').getDOMNode());
	},
	error: function() {
	console.log('Error loading @mentions members')
	}
	}
	});

	var bod = form.one('#<portlet:namespace />body');
	if (bod) {
	    bod.on('click', function (event) {
	        event.target.addClass('in-use');
	    });
	}
	var sp2 = form.one('.span2');
	if (sp2 && bod) {
	bod.on('click', function (event) {
	sp2.addClass('in-use');
	});
	}
	var al = form.one('#<portlet:namespace />alerts');
	if (al && bod) {
	bod.on('click', function (event) {
	al.removeClass('hide');
	});
	}

	if (form) {
		form.on(
			'submit',
			function(event) {
				event.halt();
				var currentTarget = event.currentTarget;

				var activityFooter = currentTarget.ancestor('.activity-footer');
				var commentsContainer = currentTarget.ancestor('.comments-container');

				var form = commentsContainer.one('form');

				var cmdNode = form.one('#<portlet:namespace /><%= Constants.CMD %>');

				cmdNode.val('<%= Constants.ADD %>');

				A.io.request(
					form.attr('action'),
					{
						after: {
							success: function(event, id, obj) {
								var responseData = this.get('responseData');
								if (responseData.success) {
									var commentsList = commentsContainer.one('.comments-list');

									commentsList.removeClass('hide');
	                                responseData.original = responseData.body;
									Liferay.Service(
									    '/socialactivitymessage-portlet.hioasocialactivity/add-cards',
									    {
									        body: responseData.body
									    },
									    function(obj) {
	                                        responseData.body = obj
									        Liferay.SO.Activities.addNewComment(commentsList, responseData);
	<%
		PortletURL notificationURL = PortletURLFactoryUtil.create(request, "socialactivitymessageportlet_WAR_socialactivitymessageportlet", themeDisplay.getPlid(), PortletRequest.RESOURCE_PHASE);
		notificationURL.setParameter("p_p_resource_id", "sendNotifications");
		notificationURL.setParameter("type", "create");
	%>
	var activity = currentTarget.ancestor('.activity-item');
	var activity_id = activity.get('id').split(/_/).pop();

	var notUri = '<%=notificationURL%>&_socialactivitymessageportlet_WAR_socialactivitymessageportlet_showSingle='+activity_id+'&_socialactivitymessageportlet_WAR_socialactivitymessageportlet_messageId='+responseData.mbMessageIdOrMicroblogsEntryId;
	var al = form.one('#<portlet:namespace />alerts');
	if (al) {
	notUri = notUri + "&_socialactivitymessageportlet_WAR_socialactivitymessageportlet_alerts="+encodeURIComponent(al.get('value'));
	}

	A.io.request(notUri, {
	dataType: 'json',
	cache: true,
	autoLoad: true,
	on: {
	success: function () {
	},
	error: function() {
	console.log('Error sending notifications')
	}
	}
	});
									    }
									);

									var viewComments = activityFooter.one('.view-comments a');

									var viewCommentsHtml = viewComments.get('innerHTML');

									var messagesCount = parseInt(viewCommentsHtml) + 1;

									if (isNaN(messagesCount)) {
										messagesCount = 1;
									}

									viewComments.html(
										messagesCount +
										(messagesCount > 1 ? ' <%= UnicodeLanguageUtil.get(pageContext, "comments") %>' : ' <%= UnicodeLanguageUtil.get(pageContext, "comment") %>')
									);

									var textInput = commentsContainer.one('.comment-form');

									textInput.attr('value', '');

	var bod = form.one('#<portlet:namespace />body');
	if (bod) {
	bod.removeClass('in-use');
	}
	var sp2 = form.one('.span2');
	if (sp2) {
	sp2.removeClass('in-use');
	}
	var al = form.one('#<portlet:namespace />alerts');
	if (al) {
	al.addClass('hide');
	}
								}
							}
						},
						dataType: 'json',
						form: {
							id: form
						}
					}
				);
			}
		);
	}
</aui:script>
<%}%>