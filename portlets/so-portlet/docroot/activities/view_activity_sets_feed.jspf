<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This file is part of Liferay Social Office. Liferay Social Office is free
 * software: you can redistribute it and/or modify it under the terms of the GNU
 * Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * Liferay Social Office is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Liferay Social Office. If not, see http://www.gnu.org/licenses/agpl-3.0.html.
 */
--%>

<%
for (SocialActivitySet activitySet : results) {
	SocialActivityFeedEntry activityFeedEntry = SocialActivityInterpreterLocalServiceUtil.interpret("SO", activitySet, ServiceContextFactory.getInstance(request));

	start++;

	if (activityFeedEntry == null) {
		continue;
	}

	if ("com.liferay.portlet.documentlibrary.model.DLFileEntry".equals(activitySet.getClassName())
			&& activitySet.getType() == 2 /* oppdaterte */) {
		continue;
	}

	if ("com.liferay.portlet.wiki.model.WikiPage".equals(activitySet.getClassName())
			&& (activitySet.getType() == 2 /* oppdaterte */ || activitySet.getType() == 10006 /* la til vedlegg */)) {
		continue;
	}

	if ("com.liferay.portlet.bookmarks.model.BookmarksEntry".equals(activitySet.getClassName())) {
		continue;
	}


	if (count >= _DELTA) {
		break;
	}

	Portlet portlet = PortletLocalServiceUtil.getPortletById(activityFeedEntry.getPortletId());
%>
<%-- <%= activitySet.getType() %><br/><%= activitySet.getClassName() %><br/> Used for debuging when removing stuff --%>
	<div class="activity-item clearfix <%= portlet.getCssClassWrapper() %>-activity" id="<portlet:namespace /><%= activitySet.getActivitySetId() %>">
		<%
		User activitySetUser = UserLocalServiceUtil.fetchUser(activitySet.getUserId());

		String userDisplayURL = StringPool.BLANK;
		String userFullName = StringPool.BLANK;
		String userPortraitURL = StringPool.BLANK;
		String userName = StringPool.BLANK;

		if (activitySetUser != null) {
			userDisplayURL = activitySetUser.getDisplayURL(themeDisplay);
			userFullName = activitySetUser.getFullName();
			userPortraitURL = activitySetUser.getPortraitURL(themeDisplay);
			userName = activitySetUser.getScreenName();
		}
		%>

		<div class="user-portrait">
			<span class="avatar">
				<a href="https://hioa.no/tilsatt/<%=userName%>">
					<img alt="<%= HtmlUtil.escape(userFullName) %>" src="<%=userPortraitURL%>" />
				</a>
			</span>
		</div>

		<%= activityFeedEntry.getTitle() %>

		<div class="activity-block">

			<%= activityFeedEntry.getBody() %>

			<div class="activity-footer">
				<c:if test="<%= !Validator.equals(activitySet.getClassName(), MBMessage.class.getName()) %>">
					<div class="activity-footer-toolbar">
						<c:if test="<%= Validator.isNotNull(activityFeedEntry.getLink()) %>">
							<span class="action"><%= activityFeedEntry.getLink() %></span>
						</c:if>

						<%
						int commentsCount = 0;

						Object[] commentsClassNameAndClassPK = ActivitiesUtil.getCommentsClassNameAndClassPK(activitySet);

						String className = (String)commentsClassNameAndClassPK[0];
						long classPK = (Long)commentsClassNameAndClassPK[1];

						if (className.equals(MicroblogsEntry.class.getName())) {
							commentsCount = MicroblogsEntryLocalServiceUtil.getReceiverMicroblogsEntryMicroblogsEntriesCount(MicroblogsEntryConstants.TYPE_REPLY, classPK);
						}
						else {
							commentsCount = MBMessageLocalServiceUtil.getDiscussionMessagesCount(className, classPK, WorkflowConstants.STATUS_APPROVED);
						}
						%>

						<c:if test="<%= className.equals(MicroblogsEntry.class.getName()) && (activitySet.getUserId() != user.getUserId()) %>">

							<%
							MicroblogsEntry microblogsEntry = MicroblogsEntryLocalServiceUtil.fetchMicroblogsEntry(classPK);
							%>

							<c:if test="<%= (microblogsEntry != null) && (microblogsEntry.getSocialRelationType() == MicroblogsEntryConstants.TYPE_EVERYONE) %>">
								<span class="repost action">
									<a data-microblogsEntryId="<%= classPK %>" href="javascript:;"><liferay-ui:message key="repost" /></a>
								</span>
							</c:if>
						</c:if>

						<span class="action view-comments">
							<a <%	if(!isOwner(themeDisplay.getUser(), activitySet.getGroupId(), themeDisplay.getCompanyId()) && commentsCount < 1) {%>class="hide"<%}%> data-activitySetId="<%= activitySet.getActivitySetId() %>" href="javascript:;"><%= commentsCount > 0 ? commentsCount : StringPool.BLANK %> <liferay-ui:message key='<%= commentsCount > 1 ? "comments" : "comment" %>' /></a>
						</span>

						<span class="action hide toggle">
							<a class="toggle-entry" data-entryId="<%= activitySet.getActivitySetId() %>" href="javascript:;">
								<i class="icon-expand-alt"></i>

								<span><liferay-ui:message key="view-more" /></span>
							</a>
						</span>

						<div class="likes-holder">
							<div class="likes"></div>
							<div class="like"><a href="javascript:;"><span class="icon icon-thumbs-up"></span></a></div>
						</div>
					</div>

					<%@ include file="/activities/view_comments.jspf" %>
				</c:if>
			</div>
		</div>
	</div>
</div>

	<aui:script use="aui-base, node-event-simulate, handlebars, aui-dialog, aui-overlay-manager">
		A.Handlebars.registerHelper("sub", function(number) {
			return number-1;
		});
		A.Handlebars.registerHelper("json", function(input) {
		    return JSON.stringify(input);
		});

		var TPL_LIKES_NONE = '<liferay-ui:message key="be-the-first"/>';
		var TPL_LIKES_SINGLE = '<a target="_blank" href="https://hioa.no/tilsatt/{{likes.0.userName}}">{{likes.0.userFullName}}</a> <liferay-ui:message key="likes-this"/>';
		var TPL_LIKES_MANY = '<a target="_blank" href="https://hioa.no/tilsatt/{{random.userName}}">{{random.userFullName}}</a> <liferay-ui:message key="and"/> <a href="#" class="other-likes" data-likes="{{json likes}}">{{sub count}} <liferay-ui:message key="others"/></a> <liferay-ui:message key="like-this"/>';
		var TPL_LIKES = '<div class="all-likes">{{#each this}}<div class="mention-card"><div class="user-portrait"><span class="avatar"><img alt="{{userFullName}}" src="{{portrait}}"></span></div>{{userFullName}}<div class="job-title">{{title}}</div><a target="_blank" href="https://hioa.no/tilsatt/{{userName}}"><span class="link-spanner"></span></a></a></div>{{/each}}</div>';
		var template_none = A.Handlebars.compile(TPL_LIKES_NONE);
		var template_single = A.Handlebars.compile(TPL_LIKES_SINGLE);
		var template_many = A.Handlebars.compile(TPL_LIKES_MANY);
		var template_likes = A.Handlebars.compile(TPL_LIKES);

		var entry = A.one('#<portlet:namespace /><%= activitySet.getActivitySetId() %>');

		var subentry = entry.one('.activity-subentry');

		if (subentry != null) {
			var body = entry.one('.grouped-activity-body');

			if (body.outerHeight() > (subentry.outerHeight() * 3)) {
				var toggle = entry.one('.toggle');

				toggle.removeClass('hide');

				entry.addClass('toggler-content-collapsed')
			}
			else {
				var bodyContainer = entry.one('.grouped-activity-body-container');

				bodyContainer.setStyle('height', 'auto');
			}
		}
		<%if (single > 0) {%>
		entry.one('.view-comments a').simulate("click");
		<%}%>

		<%
			PortletURL likeURL = PortletURLFactoryUtil.create(request, "socialactivitymessageportlet_WAR_socialactivitymessageportlet", themeDisplay.getPlid(), PortletRequest.RESOURCE_PHASE);
			likeURL.setParameter("p_p_resource_id", "like");
			likeURL.setParameter("type", "1");
			likeURL.setParameter("contentId", String.valueOf(activitySet.getActivitySetId()));

			PortletURL getLikesURL = PortletURLFactoryUtil.create(request, "socialactivitymessageportlet_WAR_socialactivitymessageportlet", themeDisplay.getPlid(), PortletRequest.RESOURCE_PHASE);
			getLikesURL.setParameter("p_p_resource_id", "getLikes");
			getLikesURL.setParameter("type", "1");
			getLikesURL.setParameter("contentId", String.valueOf(activitySet.getActivitySetId()));
		%>

		var likeLink = entry.one('.likes-holder .like a');

		handleResponse = function (responseData, entry) {
			var likeContent = entry.one('.likes-holder .likes');
			if (responseData.count == 0) {
				likeContent.setHTML(template_none(responseData));
			} else if (responseData.count == 1) {
				likeContent.setHTML(template_single(responseData));
			} else {
				likeContent.setHTML(template_many(responseData));
		        likeContent.one('.other-likes').on('click', function(event) {
					event.preventDefault();
					event.stopPropagation();
					event.stopImmediatePropagation();
		            var likes = JSON.parse(event.currentTarget.getAttribute('data-likes'));
		            new A.Modal({
						centered: true,
						modal: false,
						bodyContent: template_likes(likes),
		                zIndex: 1000,
		                render: '#aui_popup_content',
					}).render();
		            return false;
		        });
			}
		};

		A.io.request('<%=getLikesURL%>', {
			dataType: 'json',
			cache: false,
			autoLoad: true,
			on: {
				success: function (obj) {
					var responseData = this.get('responseData');
		            handleResponse(responseData, entry);
				},
				error: function() {
					console.log('Error getting likes');
				}
			}
		});

		likeLink.on('click', function(event) {
		    A.io.request('<%=likeURL%>', {
		        dataType: 'json',
		        cache: false,
		        autoLoad: true,
		        on: {
		            success: function (obj) {
		                var responseData = this.get('responseData');
		                handleResponse(responseData, entry);
		            },
		            error: function() {
		                 console.log('Error getting likes');
		            }
		        }
		    });
		});
	</aui:script>

<%
	count++;
}
%>